"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const schematics_1 = require("@angular-devkit/schematics");
const testing_1 = require("@angular-devkit/schematics/testing");
const path_1 = require("path");
const workspace_1 = require("@nrwl/workspace");
const workspace_2 = require("@nrwl/workspace");
const testing_2 = require("@nrwl/workspace/testing");
describe('Update 7.7.0', () => {
    let initialTree;
    let schematicRunner;
    beforeEach(() => {
        initialTree = testing_2.createEmptyWorkspace(schematics_1.Tree.empty());
        schematicRunner = new testing_1.SchematicTestRunner('@nrwl/schematics', path_1.join(__dirname, '../migrations.json'));
    });
    describe('setting defaults to angular', () => {
        it('should set default lib framework to Angular', () => __awaiter(this, void 0, void 0, function* () {
            const result = yield schematicRunner
                .runSchematicAsync('update-7.7.0', {}, initialTree)
                .toPromise();
            expect(workspace_1.readJsonInTree(result, 'workspace.json').schematics['@nrwl/schematics:library'].framework).toEqual('angular');
        }));
    });
    describe('jest update', () => {
        beforeEach(() => {
            initialTree.overwrite('package.json', workspace_2.serializeJson({
                devDependencies: {
                    jest: '23.10.5',
                    'jest-preset-angular': '6.0.2'
                }
            }));
            initialTree.create('jest.config.js', `module.exports = {
          testMatch: ['**/+(*.)+(spec|test).+(ts|js)?(x)'],
          transform: {
            '^.+\\.(ts|js|html)$': 'jest-preset-angular/preprocessor.js'
          },
          resolver: '@nrwl/builders/plugins/jest/resolver',
          moduleFileExtensions: ['ts', 'js', 'html'],
          coverageReporters: ['html']
        };`);
        });
        it('should update jest dependencies', () => __awaiter(this, void 0, void 0, function* () {
            const result = yield schematicRunner
                .runSchematicAsync('update-7.7.0', {}, initialTree)
                .toPromise();
            const { devDependencies } = workspace_1.readJsonInTree(result, 'package.json');
            expect(devDependencies.jest).toEqual('24.1.0');
            expect(devDependencies['jest-preset-angular']).toEqual('7.0.0');
        }));
        it('should update jest.config.js', () => __awaiter(this, void 0, void 0, function* () {
            const result = yield schematicRunner
                .runSchematicAsync('update-7.7.0', {}, initialTree)
                .toPromise();
            expect(result.readContent('jest.config.js')).not.toContain('jest-preset-angular/preprocessor.js');
        }));
    });
});
