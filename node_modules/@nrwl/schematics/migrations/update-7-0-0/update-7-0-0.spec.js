"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const schematics_1 = require("@angular-devkit/schematics");
const testing_1 = require("@angular-devkit/schematics/testing");
const workspace_1 = require("@nrwl/workspace");
const path = require("path");
const workspace_2 = require("@nrwl/workspace");
describe('Update 7.0.0', () => {
    let initialTree;
    let schematicRunner;
    beforeEach(() => {
        initialTree = schematics_1.Tree.empty();
        initialTree.create('package.json', workspace_1.serializeJson({
            devDependencies: {
                codelyzer: '~4.2.1'
            }
        }));
        schematicRunner = new testing_1.SchematicTestRunner('@nrwl/schematics', path.join(__dirname, '../migrations.json'));
    });
    it('should update codeylzer', () => __awaiter(this, void 0, void 0, function* () {
        const result = yield schematicRunner
            .runSchematicAsync('update-7.0.0', {}, initialTree)
            .toPromise();
        const devDependencies = JSON.parse(result.readContent('package.json'))
            .devDependencies;
        expect(devDependencies.codelyzer).toEqual('~4.5.0');
        expect(devDependencies['jasmine-marbles']).toEqual('0.4.0');
    }));
    it('should update ng-packagr dependencies', () => __awaiter(this, void 0, void 0, function* () {
        initialTree = yield schematicRunner
            .callRule(workspace_2.updateJsonInTree('package.json', json => {
            json.devDependencies = Object.assign({}, json.devDependencies, { 'ng-packagr': '^3.0.0' });
            return json;
        }), initialTree)
            .toPromise();
        const result = yield schematicRunner
            .runSchematicAsync('update-7.0.0', {}, initialTree)
            .toPromise();
        const devDependencies = JSON.parse(result.readContent('package.json'))
            .devDependencies;
        expect(devDependencies['ng-packagr']).toEqual('^4.2.0');
    }));
});
