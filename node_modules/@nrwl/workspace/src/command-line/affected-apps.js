"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ProjectType;
(function (ProjectType) {
    ProjectType["app"] = "app";
    ProjectType["e2e"] = "e2e";
    ProjectType["lib"] = "lib";
})(ProjectType = exports.ProjectType || (exports.ProjectType = {}));
function affectedAppNames(projects, dependencies, touchedProjects) {
    return affectedProjects(projects, dependencies, touchedProjects)
        .filter(p => p.type === ProjectType.app)
        .map(p => p.name);
}
exports.affectedAppNames = affectedAppNames;
function affectedLibNames(projects, dependencies, touchedProjects) {
    return affectedProjects(projects, dependencies, touchedProjects)
        .filter(p => p.type === ProjectType.lib)
        .map(p => p.name);
}
exports.affectedLibNames = affectedLibNames;
function affectedProjectNames(projects, dependencies, touchedProjects) {
    return affectedProjects(projects, dependencies, touchedProjects).map(p => p.name);
}
exports.affectedProjectNames = affectedProjectNames;
function affectedProjectNamesWithTarget(target) {
    return (projects, dependencies, touchedProjects) => {
        return affectedProjects(projects, dependencies, touchedProjects)
            .filter(p => p.architect[target])
            .map(p => p.name);
    };
}
exports.affectedProjectNamesWithTarget = affectedProjectNamesWithTarget;
function affectedProjects(projects, dependencies, touchedProjects) {
    return projects.filter(proj => hasDependencyOnTouchedProjects(proj.name, touchedProjects, dependencies, []));
}
function hasDependencyOnTouchedProjects(project, touchedProjects, deps, visisted) {
    if (touchedProjects.indexOf(project) > -1)
        return true;
    if (visisted.indexOf(project) > -1)
        return false;
    return (deps[project]
        .map(d => d.projectName)
        .filter(k => hasDependencyOnTouchedProjects(k, touchedProjects, deps, [
        ...visisted,
        project
    ])).length > 0);
}
